{ name := "Joe",
  val := [40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14,
          13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
  lower := 40,
  inv := _,
  flag := true }
Tree.node
  (List.cons
    (Tree.node (List.cons (Tree.leaf 10) (List.nil)) true)
    (List.cons
      (Tree.node (List.cons (Tree.leaf 9) (List.nil)) false)
      (List.cons
        (Tree.node (List.cons (Tree.leaf 8) (List.nil)) true)
        (List.cons
          (Tree.node (List.cons (Tree.leaf 7) (List.nil)) false)
          (List.cons
            (Tree.node (List.cons (Tree.leaf 6) (List.nil)) true)
            (List.cons
              (Tree.node (List.cons (Tree.leaf 5) (List.nil)) false)
              (List.cons
                (Tree.node (List.cons (Tree.leaf 4) (List.nil)) true)
                (List.cons
                  (Tree.node (List.cons (Tree.leaf 3) (List.nil)) false)
                  (List.cons
                    (Tree.node (List.cons (Tree.leaf 2) (List.nil)) true)
                    (List.cons (Tree.node (List.cons (Tree.leaf 1) (List.nil)) false) (List.nil)))))))))))
  true
StructureLikeInductive.field 5
Foo.Tree.node
  (Foo.TreeList.cons
    (Foo.Tree.leaf 30)
    (Foo.TreeList.cons (Foo.Tree.leaf 20) (Foo.TreeList.cons (Foo.Tree.leaf 10) (Foo.TreeList.nil))))
