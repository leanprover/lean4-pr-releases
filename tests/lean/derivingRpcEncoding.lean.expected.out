instTypeNameFooRef_derivingRpcEncoding : TypeName FooRef
ok: {"p": "0"}
instRpcEncodableBar_derivingRpcEncoding : RpcEncodable Bar
ok: {"fooRef": {"p": "0"}, "fooJson": {"s": ""}}
instRpcEncodableBarTrans_derivingRpcEncoding : RpcEncodable BarTrans
ok: {"bar": {"fooRef": {"p": "0"}, "fooJson": {"s": ""}}}
instRpcEncodableBaz_derivingRpcEncoding : RpcEncodable Baz
ok: {"arr": []}
instRpcEncodableFooGeneric_derivingRpcEncoding {α : Type} [inst✝ : RpcEncodable α] : RpcEncodable (FooGeneric α)
ok: {"a": 0}
ok: {"b": 42, "a": 3}
instRpcEncodableBazInductive_derivingRpcEncoding : RpcEncodable BazInductive
ok: {"baz":
 {"arr":
  [{"fooRef": {"p": "0"}, "fooJson": {"s": ""}},
   {"fooRef": {"p": "1"}, "fooJson": {"s": ""}}]}}
instRpcEncodableFooInductive_derivingRpcEncoding {α : Type} [inst✝ : RpcEncodable α] : RpcEncodable (FooInductive α)
ok: {"a": [{"baz": {"arr": []}}, {"p": "0"}]}
ok: {"b": {"n": 42, "m": 0, "a": {"baz": {"arr": []}}}}
ok: {"a": [{"baz": {"arr": []}}, [{"a": [{"baz": {"arr": []}}, []]}]]}
instRpcEncodableFooParam_derivingRpcEncoding {n : Nat} : RpcEncodable (FooParam n)
ok: {"a": 42}
instRpcEncodableUnused_derivingRpcEncoding {α : Type} : RpcEncodable (Unused α)
ok: "a"
instRpcEncodableUnusedStruct_derivingRpcEncoding {α : Type} : RpcEncodable (UnusedStruct α)
ok: {}
Except.error "no inductive constructor matched"
